---
title: "Homework 1"
author: "Helina (Yiwei) Cheng"
date: "Due Oct 9, 2023"
format: pdf
---

## Question 1: Expectations

#### 1.a) Define both and explain the difference between (1) the expectation of a random variable and (2) the sample average.

(1) The expectation of a random variable provides a measure of the "center" of the distribution of the variable, which is weighted average of all the possible outcomes of the given distribution. (2) The sample average is the mean of samples. (3) diffrences: The expectation of a random variable is a fixed number (for a given distribution), whereas the sample average can vary from one sample to another. Expectation is based on the entire probability distribution of a random variable, while the sample average is calculated from a finite set of observations.


## Question 2: LLN & CLT

#### 2.a) Plot the density of a Beta(5,2) distribution over it's domain [0,1]. Make a publication-quality plot by changing any unwanted default plotting behavior and by adding relevant titles and labels. The first parameter of the Beta distribution is often labeled $\alpha$ and the second $\beta$. The `dbeta()` and related functions in R label these parameters as `shape1` and `shape2`.

```{r}
library(ggplot2)
x <- seq(0, 1, length.out = 1000)
y <- dbeta(x, shape1 = 5, shape2 = 2)
ggplot(data.frame(x=x, y=y), aes(x=x, y=y)) + 
  geom_line(color = "blue") + 
  theme_minimal() + 
  labs(title = "Density of Beta(5,2) Distribution",
       x = "Probability",
       y = "Density") + 
  theme(plot.title = element_text(hjust = 0.5),
        axis.title.x = element_text(vjust=-0.5),
        axis.title.y = element_text(vjust=0.5))
```

#### 2.b) State the Law of Large Numbers as simply as you can.

It states that the number of observations increases, the average outcome will get closer to the expected value or true average.

#### 2.c) Set the seed to the value 1234 (`set.seed(1234)`). Then take 1,000 random draws from the Beta(5,2) distribution using `rbeta()`. Calculate a running sample average. Specifically: calculate $\bar{X}_1 = x_1$, then calculate $\bar{X}_2 = (1/2) \sum_{i=1}^2 X_i$, then calculate $\bar{X}_3 = (1/3) \sum_{i=1}^3 X_i$. Continue until you have calculated $\bar{X}_{1000} = (1/1000) \sum_{i=1}^{1000} X_i$. Create a scatterplot with the values 1--1,000 on the horizontal axis and the 1,000 cumulative average values of $\bar{X}_i$ for $i=1,\ldots,1000$ you calculated on the vertical axis. Compare your value for $\bar{X}_{1000}$ to the $\mathbb{E}[X]=\alpha/(\alpha+\beta)=5/7 = 0.7143$.

```{r}
set.seed(1234)
random_draws <- rbeta(1000, 5, 2)
# Calculating the Running Average
running_average <- cumsum(random_draws) / (1:1000)
# Scatterplot
plot(1:1000, running_average, type="b", col="blue", 
     xlab="Number of Draws", ylab="Running Average",
     main="Running Average of Beta(5,2) Draws")
abline(h=5/7, col="red", lwd=2) # Expected value line
# Compare value
last_value <- tail(running_average, n=1)
print(last_value)
```
So this time, the running sample avg is 0.7176864, which is very close to expectation of X.

#### 2.d) State the Central Limit Theorem as simply as you can.

The distribution of average values of sufficient large samples is a normal distribution.

#### 2.e) Make two plots. For the first plot, take D=10 draws from the Beta(5,2) distribution and calculate the sample average. Repeat the process of taking D=10 draws and finding the sample average R=10,000 times. Plot a histogram of the 10,000 sample averages. For the second plot, repeat the process with D=100 draws. These two histograms are called "sampling distributions." 

```{r}
# set samples
D10  = vector(length = 10000)
D100 = vector(length = 10000)
R = 10000

for (i in 1:R){
     D10[i] = mean(rbeta(10, shape1 = 5, shape2 = 2))
     D100[i] = mean(rbeta(100, shape1 = 5, shape2 = 2))
}

# Plot for D10
ggplot(data.frame(D10), aes(D10)) +
  geom_histogram(binwidth = 0.01, fill = "blue") +
  labs(
    title = "Sampling distributions_D10",
    x = "Sample Average",
    y = "frequency") +
  theme(plot.title = element_text(hjust = 0.5))

# Plot for D100
ggplot(data.frame(D100), aes(D100)) +
  geom_histogram(binwidth = 0.001, fill = "orange") +
  labs(
    title = "Sampling distributions_D100",
    x = "Sample Average",
    y = "frequency") +
  theme(plot.title = element_text(hjust = 0.5))
```


## Question 3: Linear Algebra

**Suppose $\mathbf{X}$ and $\mathbf{Y}$ are defined as follows.**

$$ \mathbf{X} = \begin{bmatrix} 1 & 1 \\ 1 & 4 \\ 1 & 5 \\ 1 & 8 \end{bmatrix}  \hspace{5em} \mathbf{y} = \begin{bmatrix} 6 \\ 5 \\ 3 \\ 2 \end{bmatrix} $$

#### 3.a) What is the rank of $\mathbf{X}$? Provide a brief (approx 1 sentence) explanation. Check your work via R code using `Matrix::rankMatrix()`.

The rank of the matrix X is 2. This is because the two columns of X are linearly independent, meaning no column can be expressed as a linear combination of any other columns.

```{r}
library(Matrix)

X <- matrix(c(1, 1, 1, 1, 1, 4, 5, 8), nrow=4, ncol=2, byrow=FALSE)
rank_of_X <- Matrix::rankMatrix(X)
print(rank_of_X)
```
So here we get the rank is 2.

#### 3.b) Calculate $\mathbf{X}'\mathbf{X}$. Use the `bmatrix` environment in Latex to typeset your answer. Check your work via R code. 

$$ \mathbf{X} = \begin{bmatrix} 1 & 1 \\ 1 & 4 \\ 1 & 5 \\ 1 & 8 \end{bmatrix}  \hspace{5em} \mathbf{X'} = \begin{bmatrix} 1 & 1 & 1 & 1 \\ 1 & 4 & 5 & 8\end{bmatrix} $$
$$\mathbf{X'X} = \begin{bmatrix} 1 + 1 + 1 + 1 = 4 & 1 + 4 + 5 + 8 = 18 \\ 1+4+5+8 = 18 & 1+16+25+64 = 106 \end{bmatrix}$$

```{r}
# Define X and X-prime
X = matrix(c(1, 1, 1, 1, 1, 4, 5, 8), nrow=4, ncol=2, byrow=FALSE);
X_prime = t(X);
xpx = X_prime %*% X
xpx
```

#### 3.c) What is the rank of $\mathbf{X}'\mathbf{X}$? Provide a brief explanation. Check your work via R code.

The second row is not a scalar multiple of the first row, so both rows are linearly independent. So the rank is 2.

```{r}
rank_of_xpx <- Matrix::rankMatrix(xpx)
print(rank_of_xpx)
```
So the rank is 2.

#### 3.d) Find $(\mathbf{X}'\mathbf{X})^{-1}$ "by hand" (as you would with paper and pencil) using the approach outlined on slide 47 of the Class 1 slides. Check your work via R code.

$$\mathbf{X'X} = \begin{bmatrix} 4 & 18 \\ 18 & 106 \end{bmatrix}$$
$$det(X'X) = ad - bc = (4 ⋅ 106) − (18 ⋅ 18) = 424 − 324 = 100 $$
$$(X'X)^{-1} = det(X'X) \times \begin{bmatrix} 106 & -18 \\ -18 & 4 \end{bmatrix} = \begin{bmatrix} 1.06 & -0.18 \\ -0.18 & 0.04 \end{bmatrix}$$

```{r}
xpx_inverse = solve(xpx)
xpx_inverse
```

#### 3.e) What is the rank of $(\mathbf{X}'\mathbf{X})^{-1}$? Provide a brief explanation. Check your work via R code.

Rank is 2 because the second row is not a scalar multiple of the first row, so both rows are linearly independent. 

```{r}
rank_of_xpx_inverse <- Matrix::rankMatrix(xpx_inverse)
print(rank_of_xpx_inverse)
```

#### 3.f) Calculate $\mathbf{X}'\mathbf{y}$. Check your work via R code.

$$\mathbf{X'} = \begin{bmatrix} 1 & 1 & 1 & 1 \\ 1 & 4 & 5 & 8\end{bmatrix}\hspace{5em} \mathbf{y} = \begin{bmatrix} 6 \\ 5 \\ 3 \\ 2 \end{bmatrix}\\
\mathbf{X'Y} = \begin{bmatrix} 6+5+3+2 =16 \\ 6+20+15+16 = 57\end{bmatrix}$$

```{r}
y = matrix(c(6,5,3,2), nrow=4, ncol=1, byrow=FALSE);
X_prime_y = X_prime %*% y
X_prime_y
```

#### 3.g) Use your results from 3d and 3f to calculate "by hand" $(\mathbf{X}'\mathbf{X})^{-1}\mathbf{X}'\mathbf{y}$.  Check your work via R code.

$$(X'X)^{-1} = \begin{bmatrix} 1.06 & -0.18 \\ -0.18 & 0.04 \end{bmatrix}\hspace{5em}\mathbf{X'Y} = \begin{bmatrix} 16 \\ 57\end{bmatrix}\\
(X'X)^{-1}X'Y = \begin{bmatrix}1.06∗16−0.18∗57 = 6.7 \\ −0.18 ∗ 16 + 57 ∗ 0.04 = −0.6 \end{bmatrix}$$

```{r}
xpx_inverse %*% X_prime_y
```




